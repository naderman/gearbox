###########################################################
#                                                         #
# Look for low-level C headers, write defines to config.h #
#                                                         #
###########################################################

INCLUDE( ${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake )
INCLUDE( ${CMAKE_ROOT}/Modules/CheckFunctionExists.cmake )

SET( CONFIG_H ${PROJECT_BINARY_DIR}/config.h )

# Only write config.h once
IF ( WROTE_CONFIG_H )
  MESSAGE( STATUS "Not writing config.h -- wrote it previously" )
ELSE ( WROTE_CONFIG_H )  
  MESSAGE( STATUS "Writing config.h" )
  SET( WROTE_CONFIG_H TRUE CACHE BOOL "Wrote config.h" )

  FILE( WRITE ${CONFIG_H} "/* config.h.  Generated by CMakeLists.txt */\n\n" )

  IF ( WIN32 )
    
    #
    # define some stuff to make MSVC look a bit more like gcc
    #

    # define 'uint' to 'unsigned int' for windows
    FILE( APPEND ${CONFIG_H} "#ifndef uint\n" )
    FILE( APPEND ${CONFIG_H} "#define uint unsigned int\n" )
    FILE( APPEND ${CONFIG_H} "#endif\n\n" )

    FILE( APPEND ${CONFIG_H} "// MSVC compiler requires this symbol before exposing the (apparently)\n" )
    FILE( APPEND ${CONFIG_H} "// non-standard symbols M_PI, etc...\n" )
    FILE( APPEND ${CONFIG_H} "#define _USE_MATH_DEFINES\n\n" )

    FILE( APPEND ${CONFIG_H} "// Just in case the above line didn't fix it...\n" )
    FILE( APPEND ${CONFIG_H} "#ifndef M_PI\n" )
    FILE( APPEND ${CONFIG_H} "#define M_PI 3.14159265358979323846\n" )
    FILE( APPEND ${CONFIG_H} "#endif\n\n" )

  ELSE( WIN32 )

    #
    # AlexB: I think all these low-level guys are 'nix-specific.
    #        Don't write them for win32.
    #

    CHECK_INCLUDE_FILE( termio.h HAVE_TERMIO_H )
    IF( HAVE_TERMIO_H )
      SET( VAL 1 )
    ELSE( HAVE_TERMIO_H )
      SET( VAL 0 )
    ENDIF( HAVE_TERMIO_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_TERMIO_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( linux/input.h HAVE_LINUX_INPUT_H )
    IF( HAVE_LINUX_INPUT_H )
      SET( VAL 1 )
    ELSE( HAVE_LINUX_INPUT_H )
      SET( VAL 0 )
    ENDIF( HAVE_LINUX_INPUT_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_LINUX_INPUT_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( string.h HAVE_STRING_H )
    IF( HAVE_STRING_H )
      SET( VAL 1 )
    ELSE( HAVE_STRING_H )
      SET( VAL 0 )
    ENDIF( HAVE_STRING_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_STRING_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( stdlib.h HAVE_STDLIB_H )
    IF( HAVE_STDLIB_H )
      SET( VAL 1 )
    ELSE( HAVE_STDLIB_H )
      SET( VAL 0 )
    ENDIF( HAVE_STDLIB_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_STDLIB_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( unistd.h HAVE_UNISTD_H )
    IF( HAVE_UNISTD_H )
      SET( VAL 1 )
    ELSE( HAVE_UNISTD_H )
      SET( VAL 0 )
    ENDIF( HAVE_UNISTD_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_UNISTD_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( sys/types.h HAVE_SYS_TYPES_H )
    IF( HAVE_SYS_TYPES_H )
      SET( VAL 1 )
    ELSE( HAVE_SYS_TYPES_H )
      SET( VAL 0 )
    ENDIF( HAVE_SYS_TYPES_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_SYS_TYPES_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( sys/stat.h HAVE_SYS_STAT_H )
    IF( HAVE_SYS_STAT_H )
      SET( VAL 1 )
    ELSE( HAVE_SYS_STAT_H )
      SET( VAL 0 )
    ENDIF( HAVE_SYS_STAT_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_SYS_STAT_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( pthread.h HAVE_PTHREAD_H )
    IF( HAVE_PTHREAD_H )
      SET( VAL 1 )
    ELSE( HAVE_PTHREAD_H )
      SET( VAL 0 )
    ENDIF( HAVE_PTHREAD_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_PTHREAD_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( sys/ioctl.h HAVE_SYS_IOCTL_H )
    IF( HAVE_SYS_IOCTL_H )
      SET( VAL 1 )
    ELSE( HAVE_SYS_IOCTL_H )
      SET( VAL 0 )
    ENDIF( HAVE_SYS_IOCTL_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_SYS_IOCTL_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( fcntl.h HAVE_FCNTL_H )
    IF( HAVE_FCNTL_H )
      SET( VAL 1 )
    ELSE( HAVE_FCNTL_H )
      SET( VAL 0 )
    ENDIF( HAVE_FCNTL_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_FCNTL_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( time.h HAVE_TIME_H )
    IF( HAVE_TIME_H )
      SET( VAL 1 )
    ELSE( HAVE_TIME_H )
      SET( VAL 0 )
    ENDIF( HAVE_TIME_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_TIME_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( errno.h HAVE_ERRNO_H )
    IF( HAVE_ERRNO_H )
      SET( VAL 1 )
    ELSE( HAVE_ERRNO_H )
      SET( VAL 0 )
    ENDIF( HAVE_ERRNO_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_ERRNO_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( zlib.h HAVE_ZLIB_H )
    IF( HAVE_ZLIB_H )
      SET( VAL 1 )
    ELSE( HAVE_ZLIB_H )
      SET( VAL 0 )
    ENDIF( HAVE_ZLIB_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_ZLIB_H ${VAL}\n\n" )

    CHECK_INCLUDE_FILE( sys/filio.h HAVE_FILIO_H )
    IF( HAVE_FILIO_H )
      SET( VAL 1 )
    ELSE( HAVE_FILIO_H )
      SET( VAL 0 )
    ENDIF( HAVE_FILIO_H )
    FILE( APPEND ${CONFIG_H} "#define HAVE_FILIO_H ${VAL}\n\n" )

    CHECK_FUNCTION_EXISTS( strnlen HAVE_STRNLEN )
    IF( HAVE_STRNLEN )
      SET( VAL 1 )
    ELSE( HAVE_STRNLEN )
      SET( VAL 0 )
    ENDIF( HAVE_STRNLEN )
    FILE( APPEND ${CONFIG_H} "#define HAVE_STRNLEN ${VAL}\n\n" )

  ENDIF( WIN32 )

ENDIF ( WROTE_CONFIG_H )  
