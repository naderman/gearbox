SET (libName flexiport)
GBX_ADD_LICENSE (LGPL)

SET (build TRUE)
GBX_REQUIRE_OPTION (build LIB ${libName} ON)

IF (build)
	INCLUDE (${GBX_CMAKE_DIR}/UseBasicRules.cmake)

	OPTION (FLEXIPORT_INCLUDE_SERIAL "Include the serial port in FlexiPort" ON)
	OPTION (FLEXIPORT_INCLUDE_TCP "Include the TCP network port in FlexiPort" ON)
	IF (GBX_OS_WIN)
		SET (FLEXIPORT_INCLUDE_LOGGING OFF)
		MESSAGE (STATUS "Flexiport log file system is not currently supported on Windows.")
	ELSE (GBX_OS_WIN)
		OPTION (FLEXIPORT_INCLUDE_LOGGING "Include the log reader/writer ports in FlexiPort" ON)
	ENDIF (GBX_OS_WIN)
	MARK_AS_ADVANCED (FLEXIPORT_INCLUDE_SERIAL FLEXIPORT_INCLUDE_TCP)

	SET (flexiport_config_h_in ${CMAKE_CURRENT_SOURCE_DIR}/flexiport_config.h.in)
	SET (flexiport_config_h ${CMAKE_CURRENT_BINARY_DIR}/flexiport_config.h)
	CONFIGURE_FILE (${flexiport_config_h_in} ${flexiport_config_h})
	INCLUDE_DIRECTORIES (${CMAKE_CURRENT_BINARY_DIR})

	SET (hdrs flexiport.h port.h timeout.h ${flexiport_config_h})
	SET (srcs flexiport.cpp port.cpp timeout.cpp ${flexiport_config_h})
	IF (FLEXIPORT_INCLUDE_SERIAL)
		SET (hdrs ${hdrs} serialport.h)
		SET (srcs ${srcs} serialport.cpp)
	ENDIF (FLEXIPORT_INCLUDE_SERIAL)
	IF (FLEXIPORT_INCLUDE_TCP)
		SET (hdrs ${hdrs} tcpport.h)
		SET (srcs ${srcs} tcpport.cpp)
	ENDIF (FLEXIPORT_INCLUDE_TCP)
	IF (FLEXIPORT_INCLUDE_LOGGING)
		SET (hdrs ${hdrs} logwriterport.h logreaderport.h)
		SET (srcs ${srcs} logwriterport.cpp logreaderport.cpp logfile.cpp)
	ENDIF (FLEXIPORT_INCLUDE_LOGGING)

	IF (WIN32)
		ADD_DEFINITIONS (-DFLEXIPORT_EXPORTS)
	ENDIF (WIN32)
	ADD_DEFINITIONS (-DFLEXIPORT_EXPORTS)
	GBX_ADD_LIBRARY (${libName} SHARED ${srcs})
	GBX_ADD_PKGCONFIG (${libName} "FlexiPort generic comms library" "" "" "" "")
	GBX_ADD_HEADERS (${libName} ${hdrs})
	IF (WIN32)
		TARGET_LINK_LIBRARIES (${libName} Ws2_32)
	ENDIF (WIN32)

	ADD_SUBDIRECTORY (utils)
	IF (GBX_BUILD_TESTS)
		ADD_SUBDIRECTORY (test)
	ENDIF (GBX_BUILD_TESTS)
ENDIF (build)
